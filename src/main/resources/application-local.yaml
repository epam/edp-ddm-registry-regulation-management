spring:
  zipkin:
    enabled: false
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  jackson:
    deserialization:
      fail-on-missing-creator-properties: true
      fail-on-null-creator-properties: true
  liquibase:
    enabled: false
  registry-datasource:
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://localhost:5432/registry
    username: postgres
    password: password
  public-datasource:
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://localhost:5432/public
    username: postgres
    password: password

hibernate:
  dialect: org.hibernate.dialect.H2Dialect

schema-crawler:
  schema: ${DB_SCHEMA:registry}
  exclude-tables:
    - registry.databasechangelog
    - registry.databasechangeloglock
    - registry.subject
    - registry.subject_hst
    - registry.subject_settings
    - registry.subject_settings_hst
    - registry.subject_equal_subject_type_equal_subject_code_v
    - registry.subject_settings_equal_settings_id_v
  exclude-table-prefixes: ddm,test
  exclude-table-suffixes: hst
  exclude-field-prefixes: ddm,dcm

server:
  port: 7070

platform:
  security:
    enabled: false

user-import-ceph:
  http-endpoint: http://localhost:4566
  access-key: access-key
  secret-key: secret-key
  bucket: bucket

s3:
  config:
    client:
      protocol: http
      signerOverride: S3SignerType
    options:
      pathStyleAccess: true

logging:
  level:
    root: INFO
    org.zalando.logbook: TRACE
  pattern:
    #   Logging patterns inherited from Spring Boot default logging system configuration
    #   add tracing
    console: '%d{${LOG_DATEFORMAT_PATTERN}} [trace:%X{traceId}/%X{spanId}/%X{x-request-id}] ${LOG_LEVEL_PATTERN} %pid --- [%15.15t] %-40.40c{1.} : %m%n${LOG_EXCEPTION_CONVERSION_WORD}'

openshift:
  namespace: test
  job:
    name: test

keycloak:
  realm: test-realm

file-validator:
  encoding: UTF-8
  extension: csv

vault:
  key: key

gerrit:
  url: https://gerrit
  repository: registry-regulations
  repository-directory: ${java.io.tmpdir}
  user: user
  password: password
  head-branch: master

scheduled:
  repositoryRefreshCron: '0 */5 * ? * *'
  repositoryRefreshTimezone: UTC
  cleanRepositoriesCron: '0 */5 * ? * *'
  cleanRepositoriesTimezone: UTC
  dataModelSnapshotCron: '0 * * ? * *'
  dataModelSnapshotTimeZone: UTC