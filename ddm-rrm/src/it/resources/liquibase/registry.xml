<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2023 EPAM Systems.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.2.xsd">

  <changeSet id="init_db_extensions" author="author">
    <xsi:sql>
      -- Extension for P_DML procedure hstore parameter
      create extension if not exists hstore;
      -- Extension for contains indexes
      create extension if not exists pg_trgm;
      -- Extension to generate uuid values
      create extension if not exists "uuid-ossp";
      -- Extension and server to enable external tables
      create extension if not exists file_fdw;
      CREATE SERVER IF NOT EXISTS srv_file_fdw FOREIGN DATA WRAPPER file_fdw;
    </xsi:sql>
  </changeSet>

  <changeSet id="init_db_types" author="author">
    <xsi:sql>
      CREATE TYPE type_operation AS ENUM ('S','I','U','D');
      CREATE TYPE type_dml AS ENUM ('I','U','D');
      CREATE TYPE refs AS(
      ref_table TEXT
      ,ref_col TEXT
      ,ref_id TEXT
      ,lookup_col TEXT
      ,list_delim CHAR(1)
      );
      CREATE TYPE type_classification_enum AS ENUM ('private', 'confidential');
      CREATE TYPE type_classification AS (
      data_column_name TEXT,
      data_classification type_classification_enum
      );
      CREATE TYPE type_access_role AS (
      data_column_name TEXT,
      access_role TEXT []
      );
      CREATE TYPE type_file as (
      ceph_key text,
      file_checksum text
      );
    </xsi:sql>
  </changeSet>
  <changeSet id="init_db_tables" author="author">
    <xsi:sql>
      CREATE TABLE public.ddm_role_permission (
      permission_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      role_name TEXT NOT NULL,
      object_name TEXT NOT NULL,
      column_name TEXT,
      operation TYPE_OPERATION NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
      CONSTRAINT pk_ddm_role_permission PRIMARY KEY (permission_id)
      );

      ALTER TABLE public.ddm_role_permission ADD CONSTRAINT iu_ddm_role_permission UNIQUE
      (role_name, object_name, operation, column_name);

      CLUSTER ddm_role_permission USING iu_ddm_role_permission;

      CREATE TABLE public.ddm_liquibase_metadata (
      metadata_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      change_type TEXT NOT NULL,
      change_name TEXT NOT NULL,
      attribute_name TEXT NOT NULL,
      attribute_value TEXT NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
      CONSTRAINT pk_ddm_liquibase_metadata PRIMARY KEY (metadata_id)
      );

      ALTER TABLE public.ddm_liquibase_metadata ADD CONSTRAINT iu_ddm_liquibase_metadata UNIQUE
      (change_name, change_type, attribute_name, attribute_value);

      CLUSTER ddm_liquibase_metadata USING iu_ddm_liquibase_metadata;
    </xsi:sql>
  </changeSet>
</databaseChangeLog>